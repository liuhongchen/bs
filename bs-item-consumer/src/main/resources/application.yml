spring:
  application:
    name: bs-item-consumer
  datasource:
    url: jdbc:mysql://s.liuhongchen.com:3306/seata?serverTimezone=UTC&useUnicode=true&characterEncoding=utf8
    username: root
    password: 123456
    driver-class-name: com.mysql.cj.jdbc.Driver
  main:
    allow-bean-definition-overriding: true
  cloud:
    alibaba:
      seata:
        tx-service-group: my_test_tx_group
  redis:
    host: s.liuhongchen.com
    database: 0
    port: 6379
#    user: root
#    password: 123456
    timeout: 3000
  kafka:
    producer:
      bootstrap-servers: s.liuhongchen.com:9092
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.apache.kafka.common.serialization.StringSerializer
  zipkin:
    base-url: http://s.liuhongchen.com:7700
  sleuth:
    sampler:
      percentage: 1.0
  rabbitmq:
    host: s.liuhongchen.com
    port: 5672
    username: guest
    password: guest

eureka:
  client:
    service-url:
      defaultZone: http://router.liuhongchen.com:7776/eureka/
    fetch-registry: true
  instance:
    prefer-ip-address: true


server:
  port: 15051

feign:
  hystrix:
    enabled: true
hystrix:
  command:
    default:
      execution:
        isolation:
          strategy: SEMAPHORE
          semaphore:
            maxConcurrentRequests: 500
#要以被负载均衡的模块的名字开始，默认是轮询
#bs-item-provider:
#  ribbon:
#    NFLoadBalanceRuleClassName: com.netflix.loadBalancer.RandomRule

logging:
  level:
    root: info
#    org:
#      springframework:
#        cloud:
#          alibaba:
#            seata:
#              web: debug
#    io:
#      seata: debug
